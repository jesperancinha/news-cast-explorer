# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build-maven:
    docker:
      - image: cimg/openjdk:17.0.1

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: mvn clean install

  build-yarn:
    docker:
      - image: cimg/node:17.3.1

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run:
          command: yarn install --force
          working_directory: news-cast-explorer-fe

      - run:
          command: yarn
          working_directory: news-cast-explorer-fe

  report-all:
    machine:
      image: ubuntu-2004:202010-01

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout
      - run: sudo apt update
      - run: sudo apt install npm
      - run: sudo npm i -g yarn
      - run: sudo npm install -g n
      - run: sudo n 16.10.0
      - run: cd news-cast-explorer-fe && yarn && yarn add jest && npm run coverage
      - run:
         name: System prepare
         command: mvn -version &&
            wget https://download.java.net/java/GA/jdk17.0.1/2a2082e5a09d4267845be086888add4f/12/GPL/openjdk-17.0.1_linux-x64_bin.tar.gz &&
            tar xvf openjdk-17.0.1_linux-x64_bin.tar.gz &&
            sudo mv jdk-17*/ /opt/jdk17 &&
            export JAVA_HOME=/opt/jdk17 &&
            export PATH=$PATH:$JAVA_HOME/bin &&
            mvn -version

      - run:
         name: Build and Test
         command:
             export JAVA_HOME=/opt/jdk17 &&
             export PATH=$PATH:$JAVA_HOME/bin &&
             mvn -version &&
             mvn clean install jacoco:prepare-agent package jacoco:report

      - run:
         name: Coverage Reports
         command:
              export JAVA_HOME=/opt/jdk17 &&
              export PATH=$PATH:$JAVA_HOME/bin &&
              mvn -version &&
              mvn omni-coveragereporter:report

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

workflows:
  version: 2
  build_all:
    jobs:
      - build-maven
      - build-yarn
      - report-all
